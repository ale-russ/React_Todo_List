{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/react projects/react_crash_todo/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    this.markComplete = e => {\n      console.log(this.props);\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title\n    } = this.props.todo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }), ' ', title, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.delTodo.bind(this, id),\n      style: btnStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"X\")));\n  }\n\n} //PropTypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  boder: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};\n/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/\n\nexport default TodoItem;","map":{"version":3,"sources":["/home/user/Documents/react projects/react_crash_todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","render","id","title","bind","delTodo","btnStyle","propTypes","object","isRequired","func","color","boder","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,QAFoC,GAEzB,MAAM;AACb,aAAO;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ1D,OAAP;AAMH,KATmC;;AAAA,SAWpCC,YAXoC,GAWpBC,CAAD,IAAO;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACH,KAbmC;AAAA;;AAgBpCO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgB,KAAKT,KAAL,CAAWC,IAAjC;AACA,wBAEI;AAAK,MAAA,KAAK,EAAE,KAAKN,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWG,YAAX,CAAwBO,IAAxB,CAA6B,IAA7B,EAAmCF,EAAnC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACgF,GADhF,EAEKC,KAFL,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWW,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BF,EAA9B,CAAjB;AACI,MAAA,KAAK,EAAEI,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ,CAFJ;AAWH;;AA7BmC,C,CAgCxC;;AACAlB,QAAQ,CAACmB,SAAT,GAAqB;AACjBZ,EAAAA,IAAI,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UADN;AAEjBZ,EAAAA,YAAY,EAAEV,SAAS,CAACuB,IAAV,CAAeD,UAFZ;AAGjBJ,EAAAA,OAAO,EAAElB,SAAS,CAACuB,IAAV,CAAeD;AAHP,CAArB;AAOA,MAAMH,QAAQ,GAAG;AACbhB,EAAAA,UAAU,EAAE,SADC;AAEbqB,EAAAA,KAAK,EAAE,MAFM;AAGbC,EAAAA,KAAK,EAAE,MAHM;AAIbrB,EAAAA,OAAO,EAAE,SAJI;AAKbsB,EAAAA,YAAY,EAAE,KALD;AAMbC,EAAAA,MAAM,EAAE,SANK;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAjB;AASA;;;;;;AAKA,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    markComplete = (e) => {\n        console.log(this.props)\n    }\n\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} />{' '}\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this, id)}\n                        style={btnStyle}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n\n}\n\nconst btnStyle = {\n    background: \"#ff0000\",\n    color: \"#fff\",\n    boder: 'none',\n    padding: '5px 9px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}