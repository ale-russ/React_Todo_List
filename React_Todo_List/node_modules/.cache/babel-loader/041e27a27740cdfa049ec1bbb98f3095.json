{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/react projects/react_crash_todo/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.getStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }, this.props.todo.title));\n  }\n\n} //PropTypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\n/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/\n\nexport default TodoItem;","map":{"version":3,"sources":["/home/user/Documents/react projects/react_crash_todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","render","getStyle","props","todo","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AACpCG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE,KAAKC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAApB,CADJ,CADJ;AAKH;;AAPmC,C,CAUxC;;AACAL,QAAQ,CAACM,SAAT,GAAqB;AACjBF,EAAAA,IAAI,EAAEL,SAAS,CAACQ,MAAV,CAAiBC;AADN,CAArB;AAIA;;;;;;AAKA,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n    render() {\n        return (\n            <div style={this.getStyle}>\n                <p>{this.props.todo.title}</p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\n/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}