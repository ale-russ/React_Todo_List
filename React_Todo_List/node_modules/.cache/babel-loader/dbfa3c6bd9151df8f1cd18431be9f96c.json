{"ast":null,"code":"import _classCallCheck from\"/home/user/Documents/react projects/react_crash_todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/Documents/react projects/react_crash_todo/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/user/Documents/react projects/react_crash_todo/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/user/Documents/react projects/react_crash_todo/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';export var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);var _super=_createSuper(TodoItem);function TodoItem(){var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getStyle=function(){return{background:'#f4f4f4',padding:'10px',borderBottom:'1px #ccc dotted',textDecoration:_this.props.todo.completed?'line-through':'none'};};_this.markComplete=function(e){console.log(_this.props);};return _this;}_createClass(TodoItem,[{key:\"render\",value:function render(){var _this$props$todo=this.props.todo,id=_this$props$todo.id,title=_this$props$todo.title;return/*#__PURE__*/React.createElement(\"div\",{style:this.getStyle()},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",onChange:this.props.markComplete.bind(this,id)}),' ',title,/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.delTodo.bind(this,id),style:btnStyle},\"X\")));}}]);return TodoItem;}(Component);//PropTypes\nvar btnStyle={background:\"#ff0000\",color:\"#fff\",boder:'none',padding:'5px 9px',borderRadius:'50%',cursor:'pointer',float:'right'};/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/export default TodoItem;","map":{"version":3,"sources":["/home/user/Documents/react projects/react_crash_todo/src/components/TodoItem.js"],"names":["React","Component","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","markComplete","e","console","log","id","title","bind","delTodo","btnStyle","color","boder","borderRadius","cursor","float"],"mappings":"4gBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA,UAAaC,CAAAA,QAAb,mUAEIC,QAFJ,CAEe,UAAM,CACb,MAAO,CACHC,UAAU,CAAE,SADT,CAEHC,OAAO,CAAE,MAFN,CAGHC,YAAY,CAAE,iBAHX,CAIHC,cAAc,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CAA4B,cAA5B,CAA6C,MAJ1D,CAAP,CAMH,CATL,OAWIC,YAXJ,CAWmB,SAACC,CAAD,CAAO,CAClBC,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAjB,EACH,CAbL,2EAgBa,sBACiB,KAAKA,KAAL,CAAWC,IAD5B,CACGM,EADH,kBACGA,EADH,CACOC,KADP,kBACOA,KADP,CAEL,mBAEI,2BAAK,KAAK,CAAE,KAAKb,QAAL,EAAZ,eACI,0CACI,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,KAAKK,KAAL,CAAWG,YAAX,CAAwBM,IAAxB,CAA6B,IAA7B,CAAmCF,EAAnC,CAAjC,EADJ,CACgF,GADhF,CAEKC,KAFL,cAGI,8BAAQ,OAAO,CAAE,KAAKR,KAAL,CAAWU,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,CAA8BF,EAA9B,CAAjB,CACI,KAAK,CAAEI,QADX,MAHJ,CADJ,CAFJ,CAWH,CA7BL,sBAA8BlB,SAA9B,EAgCA;AAQA,GAAMkB,CAAAA,QAAQ,CAAG,CACbf,UAAU,CAAE,SADC,CAEbgB,KAAK,CAAE,MAFM,CAGbC,KAAK,CAAE,MAHM,CAIbhB,OAAO,CAAE,SAJI,CAKbiB,YAAY,CAAE,KALD,CAMbC,MAAM,CAAE,SANK,CAObC,KAAK,CAAE,OAPM,CAAjB,CASA;;;;EAKA,cAAetB,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class TodoItem extends Component {\n\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    markComplete = (e) => {\n        console.log(this.props)\n    }\n\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} />{' '}\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this, id)}\n                        style={btnStyle}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n\n}\n\nconst btnStyle = {\n    background: \"#ff0000\",\n    color: \"#fff\",\n    boder: 'none',\n    padding: '5px 9px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n/*One way of assigning style is create a variable as shown below and then pass it to the element \nconst itemStyle = {\n    backgroundColor: '#f4f4f4'\n}\n*/\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}